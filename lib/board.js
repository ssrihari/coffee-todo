// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.Board = (function() {

    Board.COUNT = 0;

    Board.all = [];

    function Board(id, name) {
      this["delete"] = __bind(this["delete"], this);

      this.makeActive = __bind(this.makeActive, this);

      this.fetchLists = __bind(this.fetchLists, this);

      this.save = __bind(this.save, this);

      this.changeName = __bind(this.changeName, this);

      this.menu = __bind(this.menu, this);

      this.content = __bind(this.content, this);

      this.addList = __bind(this.addList, this);

      this.setUpView = __bind(this.setUpView, this);
      Board.COUNT++;
      this.lists = [];
      this.boardNameView = $('<span type="text" class="board-name"></span>');
      this.id = ((id != null) ? id : Board.COUNT);
      if (!name) {
        name = prompt("Enter your new Board's name:", "Board");
      }
      if (name) {
        this.boardNameView.text(name);
      } else {
        this.boardNameView.text("Board");
      }
      this.setUpView();
      this.save();
    }

    Board.prototype.setUpView = function() {
      var addListView, boardNamesDiv;
      boardNamesDiv = $(".board-names");
      boardNamesDiv.append('<p class="board-name-separator">&nbsp|&nbsp</p>');
      boardNamesDiv.append(this.boardNameView);
      this.boardNameView.dblclick(this.menu);
      this.boardNameView.click(this.makeActive);
      this.view = $('<div class="board"></div>');
      this.view.attr('id', "board-" + this.id);
      addListView = $('<span class="add-list">+</span>');
      this.view.append(addListView);
      addListView.click(this.addList);
      return $(".boards").append(this.view);
    };

    Board.prototype.addList = function() {
      return this.lists.push(new List(this.id));
    };

    Board.prototype.content = function() {
      return this.boardNameView.text();
    };

    Board.prototype.menu = function() {
      var left, top;
      left = this.boardNameView.position().left;
      top = this.boardNameView.position().top + this.boardNameView.height() + 10;
      $(".board-menu").dialog("option", {
        position: [left, top]
      });
      $("input.new-board-name").val('');
      $("input.new-board-name").keyup(this.changeName);
      $("button.delete-board").click(this["delete"]);
      return $(".board-menu").dialog("open");
    };

    Board.prototype.changeName = function(e) {
      var new_name;
      new_name = $(e.target).val();
      if (this.boardNameView.hasClass('active') && new_name) {
        this.boardNameView.text(new_name);
        $(".board-menu").dialog({
          title: "" + new_name + " "
        });
        return this.save();
      }
    };

    Board.prototype.save = function() {
      var boardName;
      boardName = this.content();
      return $.post("board.php", {
        'name': boardName,
        'id': this.id
      }, function(data) {
        return console.log("Board save data: " + data);
      });
    };

    Board.prototype.fetchLists = function() {
      var _this = this;
      return $.get("list.php", {
        board_id: this.id,
        all: "true"
      }, function(data) {
        var i, list, _results;
        data = JSON.parse(data);
        _results = [];
        for (i in data) {
          list = data[i];
          list = new List(_this.id, list['id'], list['name']);
          _this.lists.push(list);
          _results.push(list.fetchItems());
        }
        return _results;
      });
    };

    Board.prototype.makeActive = function() {
      var board, _i, _len, _ref;
      _ref = Board.all;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        board = _ref[_i];
        board.view.hide();
        board.boardNameView.removeClass('active');
      }
      this.view.show();
      this.boardNameView.addClass('active');
      return console.log("Board " + this.id + " is now active");
    };

    Board.prototype["delete"] = function() {
      if (this.boardNameView.hasClass('active')) {
        if (!confirm("Are you sure?")) {
          return;
        }
        this.view.remove();
        this.boardNameView.remove();
        $(".board-menu").dialog("close");
        Board.all[Board.all.length - 2].makeActive();
        return $.post("board.php", {
          'delete': true,
          'id': this.id
        }, function(data) {
          return console.log("Board save data: " + data);
        });
      }
    };

    Board.init = function() {
      return $.get("board.php", {
        all: "true"
      }, function(data) {
        var board, i;
        data = JSON.parse(data);
        for (i in data) {
          board = data[i];
          board = new Board(board['id'], board['name']);
          Board.all.push(board);
          board.fetchLists();
        }
        return Board.all[0].makeActive();
      });
    };

    return Board;

  })();

}).call(this);
